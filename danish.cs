using Lemegeton.Core;

namespace Lemegeton.Language
{

    internal class English : Core.Language
    {

        public override bool IsDefault => true;
        public override string LanguageName => "English";
        public override bool FontDownloadNecessary => false;
        public override string FontDownload => null;
        public override GlyphRangeEnum GlyphRange => GlyphRangeEnum.Undefined;

        public English(State st) : base(st)
        {
            #region 1.0.1.4
            AddEntry("Content/Miscellaneous/Overlays", "overlejring");
            AddEntry("Content/Miscellaneous/Overlays/Enabled", "Aktiveret");
            AddEntry("Content/Miscellaneous/Overlays/DotTracker", "DoT Sporer");
            AddEntry("Content/Miscellaneous/Overlays/DotTracker/Enabled", "Aktiveret");
            AddEntry("Content/Miscellaneous/Overlays/DotTracker/DotSettings", "Registrerede skade-over-tid-statusser");
            #endregion
            #region 1.0.1.3
            AddEntry("Timelines/ActionTypes/ChatMessage", "Beskeder i spillet");
            AddEntry("Timelines/ActionTypes/IngameCommand", "Kommander i spillet");
            AddEntry("Timelines/ChatMessageText", "Besked der skal vises i spilchat");
            AddEntry("Timelines/ChatMessageSeverity", "Beskedens alvorlighedsgrad");
            AddEntry("Timelines/IngameCommandText", "Kommando til udførelse");
            AddEntry("Timelines/ChatMessageSeverity/Normal", "Normal");
            AddEntry("Timelines/ChatMessageSeverity/Error", "Fejl");
            #endregion
            #region 1.0.1.1
            AddEntry("Signs/Attack6", "Angreb 6");
            AddEntry("Signs/Attack7", "Angreb 7");
            AddEntry("Signs/Attack8", "Angreb 8");
            #endregion
            #region 1.0.1.0
            AddEntry("MainMenu/Timelines", "Tidslinjer");
            AddEntry("Timelines/Timeline", "Tidslinje");
            AddEntry("Timelines/Encounter", "Møde/fase {0}");
            AddEntry("Timelines/Timeline/None", "(Ingen)");
            AddEntry("Timelines/ReloadTimeline", "Genindlæs tidslinje");
            AddEntry("Timelines/Profile/Default", "(Standard)");
            AddEntry("Timelines/Profile", "Profil");
            AddEntry("Timelines/CreateProfile", "Lav en ny profil");
            AddEntry("Timelines/CreateNewProfileAs", "Lav en ny profil som..");
            AddEntry("Timelines/CloneProfile", "Klon Profil");
            AddEntry("Timelines/CloneProfileAs", "Klon Profil som..");
            AddEntry("Timelines/DeleteProfile", "Slet Profil");
            AddEntry("Timelines/PreviewActive", "Mens disse indstillinger vises, kan du frit flytte og ændre størrelsen på tidslinjeoverlejringen. Tidslinjeoverlejringen viser også en fremskyndet forhåndsvisning af dine indstillinger, og i denne periode vil normal tidslinjevisning ikke være tilgængelig..");
            AddEntry("Timelines/PreviewTestAbilityName", "Evnenavn: Test");
            AddEntry("Timelines/Settings/ShowOverlay", "Vis tidslinjeoverlejring, når den er tilgængelig.");
            AddEntry("Timelines/Settings/BarColor", "Farve på kommende begivenhedsbjælke");
            AddEntry("Timelines/Settings/BarSoonColor", "Farve på fremskudt advarselsbjælke");
            AddEntry("Timelines/Settings/BarActiveColor", "Farve på aktiv begivenhedsbjælke");
            AddEntry("Timelines/Settings/BarTextColor", "Farve på tekst for kommende begivenheder");
            AddEntry("Timelines/Settings/BarSoonTextColor", "Farve på tekst for fremskudte advarsler");
            AddEntry("Timelines/Settings/BarActiveTextColor", "Farve på tekst for aktive begivenheder.");
            AddEntry("Timelines/Settings/BarBgColor", "Baggrundsfarve på timerbjælke");
            AddEntry("Timelines/Settings/ShowBarHead", "Fremhævn bjælkehovedet");
            AddEntry("Timelines/Settings/ShowBarName", "Vis begivenhedsnavn på bjælken");
            AddEntry("Timelines/Settings/ShowBarTime", "Vis tidspunktet på bjælken");
            AddEntry("Timelines/Settings/ShowBarCaps", "Vis altid evnens navn med store bogstaver");
            AddEntry("Timelines/Settings/ShowDebug", "Vis fejlfinding af tidslinjeinformation");
            AddEntry("Timelines/Settings/BarStyle", "Visningsstil for timerbjælke");
            AddEntry("Timelines/Settings/BarStyles/Solid", "Solidt");
            AddEntry("Timelines/Settings/BarStyles/Fancy", "Elegant");
            AddEntry("Timelines/Settings/BarHeight", "Højde på timerbjælken");
            AddEntry("Timelines/Settings/BarTextScale", "Tekstskala");
            AddEntry("Timelines/Settings/TimeThreshold", "Tærskel for begivenhedssynlighed");
            AddEntry("Timelines/Settings/SoonThreshold", "Tidspunkt for fremhævelse af fremskudt advarsel");
            AddEntry("Timelines/Settings/PastThreshold", "Synlighed for tidligere begivenheder");
            AddEntry("Timelines/SpecialTags/Targettable", "Målbar");
            AddEntry("Timelines/SpecialTags/Untargettable", "Umålbar");
            AddEntry("MainMenu/Settings/TimelineSettings", "Indstillinger for tidslinje");
            AddEntry("MainMenu/Settings/TimelineTabVisible", "Synlig tidslinjefane");
            AddEntry("MainMenu/Settings/TimelineLocalAllowed", "Tillad indlæsning af lokale tidslinjer");
            AddEntry("MainMenu/Settings/TimelineLocalFolder", "Lokal tidslinjemappe");
            AddEntry("MainMenu/Settings/TimelineLocalReload", "Genindlæs alle lokale tidslinjer");
            AddEntry("MainMenu/Settings/TimelineOverlaySettings", "Indstillinger for tidslinjeoverlejring");
            AddEntry("Timelines/ProfileDetails", "Profil indstillinger");
            AddEntry("Timelines/EventDetails", "Tidslinjebegivenheder");
            AddEntry("Timelines/Reactions", "Reaktioner");
            AddEntry("Timelines/ProfileSettings/DefaultApplied", "Standardprofilen betragtes som global for tidslinjen, og alle indstillinger og reaktioner derfra anvendes altid i tillæg til indstillinger og reaktioner fra eventuelle andre profiler, der måtte være i brug.");
            AddEntry("Timelines/ProfileSettings/ShowOverlay", "Vis overlejring, når denne profil anvendes");
            AddEntry("Timelines/ProfileSettings/ReactionsActive", "Aktivér reaktioner, når denne profil anvendes");
            AddEntry("Timelines/ProfileSettings/ApplyAlways", "Brug altid denne profil");
            AddEntry("Timelines/ProfileSettings/ApplyProfileOnJob", "Brug denne profil, når du er på en af følgende job:");
            AddEntry("Timelines/EventSettings/ShowOverlay", "Vis denne begivenhed på tidslinjeoverlejringen");
            AddEntry("Timelines/EventSettings/ReactionsActive", "Aktivér reaktioner på denne begivenhed");
            AddEntry("Timelines/Reactions/NewReaction", "Opret en ny reaktion");
            AddEntry("Timelines/Reactions/CloneReaction", "Klon reaktion");
            AddEntry("Timelines/Reactions/DeleteReaction", "Slet reaktion");
            AddEntry("Timelines/Reactions/TestReaction", "Prøv reaktion");
            AddEntry("Timelines/CreateNewReactionAs", "Opret ny reaktion som..");
            AddEntry("Timelines/CloneReactionAs", "Klon reaktion som..");            
            AddEntry("Timelines/Actions", "Handlinger");
            AddEntry("Timelines/Status/ActiveTimeline", "Aktuelt aktiv tidslinje");
            AddEntry("Timelines/Status/ActiveProfile", "Aktuelt aktiv profil");
            AddEntry("Timelines/Status/InactiveTimeline", "Ingen tidslinje er i øjeblikket aktiv eller tilgængelig for denne zone.");
            AddEntry("Timelines/ReactionSettings/TimeOffset", "Tidsforskydning fra begivenhed (tilfældig inden for den angivne rækkevidde)");
            AddEntry("Timelines/Actions/NewAction", "Opret en ny handling");
            AddEntry("Timelines/Actions/CloneAction", "Klon handling");
            AddEntry("Timelines/Actions/DeleteAction", "Slet handling");
            AddEntry("Timelines/Actions/TestAction", "Prøv handling");
            AddEntry("Timelines/ActionTypes", "Handlingstype");
            AddEntry("Timelines/ActionTypes/Notification", "Notifikation");
            AddEntry("Timelines/NotificationSeverity", "Alvorlighed");
            AddEntry("Timelines/NotificationSeverity/Critical", "Kritisk");
            AddEntry("Timelines/NotificationSeverity/Important", "Vigtigt");
            AddEntry("Timelines/NotificationSeverity/Normal", "Normalt");
            AddEntry("Timelines/NotificationSoundEffect", "Lyd effekt");
            AddEntry("Timelines/NotificationText", "Tekstbesked");
            AddEntry("Timelines/NotificationTTL", "Notifikation time-to-live");
            AddEntry("Timelines/NotificationTTS", "Brug tekst-til-tale");
            AddEntry("SoundEffect/None", "Ingen lydeffekt");
            AddEntry("MainMenu/Settings/NotificationOverlaySettings", "Indstillinger for notifikationsoverlejring");
            AddEntry("Notifications/PreviewActive", "Mens disse indstillinger vises, kan du frit flytte og ændre størrelsen på notifikationsoverlejringen. Notifikationsoverlejringen vil også vise en forhåndsvisning af dine indstillinger, og i denne periode vil normal notifikationsvisning ikke være tilgængelig.");
            AddEntry("Notifications/Settings/ShowOverlay", "Vis notifikationsoverlejring");
            AddEntry("Notifications/TestNotification", "Test notifikation: {0}");
            AddEntry("Notifications/Settings/TextScale", "Skalering af notifikationstekst");
            AddEntry("Notifications/Settings/EntryHeight", "Højde på notifikationsindgang");
            AddEntry("Notifications/Settings/NotificationOrderReverse", "Vis nye notifikationer nederst i stedet for øverst");
            AddEntry("Notifications/Settings/TextAlignments", "Justering af notifikationstekst");
            AddEntry("Notifications/Settings/TextAlignments/Left", "Venstrealigneret");
            AddEntry("Notifications/Settings/TextAlignments/Center", "Centreret");
            AddEntry("Notifications/Settings/TextAlignments/Right", "Højrealigneret");
            AddEntry("Notifications/Settings/CriticalTextColor", "Farve på tekst for kritiske notifikationer");
            AddEntry("Notifications/Settings/CriticalBgColor", "Baggrundsfarve på kritiske notifikationer");
            AddEntry("Notifications/Settings/ImportantTextColor", "Farve på tekst for vigtige notifikationer");
            AddEntry("Notifications/Settings/ImportantBgColor", "Baggrundsfarve på vigtige notifikationer");
            AddEntry("Notifications/Settings/NormalTextColor", "Farve på tekst for normale notifikationer");
            AddEntry("Notifications/Settings/NormalBgColor", "Baggrundsfarve på normale notifikationer");
            AddEntry("Notifications/Settings/EntryMargin", "Horisontal tekstmargin");
            AddEntry("Timelines/ReactionSettings/Triggers", "Udløser for reaktion");
            AddEntry("Timelines/ReactionSettings/Triggers/Timed", "Timed");
            AddEntry("Timelines/ReactionSettings/Triggers/OnCastBegin", "Når evnen begynder at kaste");
            AddEntry("Timelines/ReactionSettings/Triggers/OnCastEnd", "Når evnen udføres");
            AddEntry("Timelines/ReactionSettings/Triggers/Targettable", "Når combatanten bliver målbar");
            AddEntry("Timelines/ReactionSettings/Triggers/Untargettable", "Når combatanten bliver umålbar");
            AddEntry("Timelines/ReactionSettings/Triggers/Spawn", "Når combatanten spawner");
            AddEntry("MainMenu/Settings/TtsSettings", "Indstillinger for tekst-til-tale");
            AddEntry("TextToSpeech/Settings/TTSEnabled", "Aktivér tekst-til-tale");
            AddEntry("TextToSpeech/Settings/TTSAllNotifications", "Brug automatisk tekst-til-tale for alle notifikationer");
            AddEntry("TextToSpeech/Settings/TTSSpeed", "Tale hastighed");
            AddEntry("TextToSpeech/Settings/TTSVolume", "Tale lydstyrke");
            AddEntry("Content/Debug/Timelines", "Tidslinjer");
            AddEntry("Content/Debug/Timelines/Enabled", "Aktiveret");
            AddEntry("Content/Debug/Timelines/TimelineRecorder", "Tidslinjeoptager");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/Enabled", "Aktiveret");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/StartRecordingOnCombat", "Start/fortsæt optagelse, når kampen starter");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/SuspendRecordingAfterCombat", "Suspendér optagelse, når kampen slutter, og start en ny kamp, når den genoptages");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/StopRecordingAfterCombat", "Stop optagelse, når kampen slutter, og afslut den nuværende optagelse");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/ResumeRecordingOnTargettable", "Genoptag optagelse, når fjendtlige enheder bliver målbar");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/SuspendRecordingOnUntargettable", "Suspendér optagelse, når fjendtlige enheder bliver umålbar");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/StopRecordingOnUntargettable", "Stop optagelse, når fjendtlige enheder bliver umålbar");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/TargetFolder", "Målmappen for tidslinjen");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/CurrentStatus", "Current recorder status");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/CurrentTargetFile", "Current recorder target file");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/StartRecordingAction", "Start/resume recording");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/SuspendRecordingAction", "Suspend recording");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/StopRecordingAction", "Stop recording and finalize timeline");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/IgnoreAutoAttacks", "Ignorér auto attacks");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/IgnoreSpawns", "Ignorér nye spawn af combatants");
            AddEntry("TimelineRecorder/Idle", "Inaktiv");
            AddEntry("TimelineRecorder/Recording", "Optagelse af begivenheder");
            AddEntry("TimelineRecorder/Suspended", "Optagelse suspenderet");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM", "(P5) Death of the Heavens Automarkér");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Enabled", "Aktiveret");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/SelfMarkOnly", "Kun selvmarkering");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/AsSoftmarker", "Vis som klientbaserede bløde markører");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Signs", "Marker konfiguration");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Signs/Doom1", "Doom 1");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Signs/Doom2", "Doom 2");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Signs/Doom3", "Doom 3");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Signs/Doom4", "Doom 4");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Signs/NonDoom1", "Non-Doom 1");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Signs/NonDoom2", "Non-Doom 2");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Signs/NonDoom3", "Non-Doom 3");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Signs/NonDoom4", "Non-Doom 4");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Prio", "Prioritets konfiguration");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Test", "Test tildeling (med respekt for prioritet)");
            #endregion
            #region <1.0.1.0
            AddEntry("Command/QuickToggleAutomarkers/On", "Lemegeton: Automarkører er nu aktiveret.");
            AddEntry("Command/QuickToggleAutomarkers/Off", "Lemegeton: Automarkører er nu deaktiveret.");
            AddEntry("Command/QuickToggleOverlays/On", "Lemegeton: Tegninger og overlejringer er nu aktiveret.");
            AddEntry("Command/QuickToggleOverlays/Off", "Lemegeton: Tegninger og overlejringer er nu deaktiveret.");
            AddEntry("Command/QuickToggleSound/On", "Lemegeton: Lyd funktioner er nu aktiveret.");
            AddEntry("Command/QuickToggleSound/Off", "Lemegeton: Lyd funktioner er nu deaktiveret.");
            AddEntry("Command/QuickToggleHacks/On", "Lemegeton: Hacks og spilændrende funktioner er nu aktiveret.");
            AddEntry("Command/QuickToggleHacks/Off", "Lemegeton: Hacks og spilændrende funktioner er nu deaktiveret.");
            AddEntry("Command/QuickToggleAutomation/On", "Lemegeton: Automatiseringsfunktioner er nu aktiveret.");
            AddEntry("Command/QuickToggleAutomation/Off", "Lemegeton: Automatiseringsfunktioner er nu deaktiveret.");
            AddEntry("Command/AutomarkerSoft/On", "Lemegeton: Klientbaserede soft automarkører er nu aktiveret.");
            AddEntry("Command/AutomarkerSoft/Off", "Lemegeton: Klientbaserede soft automarkører er nu deaktiveret.");
            AddEntry("Status/AtAGlance", "At a glance");
            AddEntry("Status/CurrentlyActive", "Aktuelt aktiv");
            AddEntry("Status/ImpactToFunctionality", "Indvirkning på funktionalitet");
            AddEntry("Status/AllIsWell", "Alt burde være i orden og fungere som det skal!");
            AddEntry("Status/StatusGotOpcodesTrue", "Netværksopcodes indlæst");
            AddEntry("Status/StatusGotOpcodesFalse", "Kunne ikke indlæse netværksopcodes!");
            AddEntry("Status/StatusMarkingFuncAvailableTrue", "Markering funktion tilgængelig");
            AddEntry("Status/StatusMarkingFuncAvailableFalse", "Kunne ikke finde markering funktionen!");
            AddEntry("Status/StatusPostCommandAvailableTrue", "Kommandopost funktion tilgængelig");
            AddEntry("Status/StatusPostCommandAvailableFalse", "Kunne ikke finde kommandopost funktionen!");
            AddEntry("Status/StatusNetworkTrafficUpTrue", "Netværkstrafikken til servere ser ud til at være i orden");
            AddEntry("Status/StatusNetworkTrafficUpFalse", "Jeg har ikke set nogen netværkstrafik til servere i det sidste minut!");
            AddEntry("Status/StatusNetworkTrafficDownTrue", "Netværkstrafikken fra servere ser ud til at være i orden");
            AddEntry("Status/StatusNetworkTrafficDownFalse", "Jeg har ikke set nogen netværkstrafik fra servere i det sidste minut!");
            AddEntry("Status/WarnNoOpcodes", "Opcodes er utilgængelige, så det er ikke muligt at læse netværkstrafikken og se, hvad der foregår i spillet. Dette betyder, at en del funktionalitet kan være brudt!");
            AddEntry("Status/WarnOpcodesVersion", "Opcode-informationen er til en anden spilversion ({0}) end den, der kører i øjeblikket ({1}) - dette sker sandsynligvis lige efter en spilopdatering, og det kræver en opdatering for at blive rettet. En del funktionalitet kan være brudt!");
            AddEntry("Status/WarnAutomarkersBroken", "Begge markering metoder er utilgængelige, så det er ikke muligt at udføre markering. Dette betyder, at automarkørerne er brudt!");
            AddEntry("Status/WarnAutomarkersSemibroken", "Z");
            AddEntry("Status/WarnCommandPostBroken", "While the primary marking method is available, the secondary marking method is not. This will have no impact on automarkers, but this is just for your information.");
            AddEntry("Status/WarnNoTrafficUp", "When network traffic is not going to the server, you may be disconnecting and your actions may not be registering.");
            AddEntry("Status/WarnNoTrafficDown", "When network traffic is not being received from the server, you may be disconnecting or the plugin is not receiving network data. Either way, without receiving information from the server, a lot of functionality may be broken!");
            AddEntry("Status/WarnHacksActive", "You have at least one hack or game-altering feature enabled! The effects may be obvious to any viewers, so streaming is not recommended.");
            AddEntry("Status/WarnAutomationsActive", "You have at least one automation feature enabled! The effects may be obvious to any viewers, so streaming is not recommended.");
            AddEntry("Status/WarnDrawsActive", "You have at least one screen drawing feature or overlay enabled! If you plan on streaming, check your capture settings so that overlays are not captured.");
            AddEntry("Status/WarnAutomarkersQuickDisabled", "You have at least one automarker enabled, but automarkers are currently disabled in the settings, under 'Quick toggles'.");
            AddEntry("Status/WarnOverlaysQuickDisabled", "You have at least one screen drawing feature or overlay enabled, but drawing and overlays are currently disabled in the settings, under 'Quick toggles'.");
            AddEntry("Status/WarnSoundQuickDisabled", "You have at least one sound generating feature enabled, but sound output is currently disabled in the settings, under 'Quick toggles'.");
            AddEntry("Status/WarnHackQuickDisabled", "You have at least one hack or game-altering feature enabled, but hacks and game-altering features are currently disabled in the settings, under 'Quick toggles'.");
            AddEntry("Status/WarnAutomationQuickDisabled", "You have at least one automation feature enabled, but automation features are currently disabled in the settings, under 'Quick toggles'.");
            AddEntry("Status/NumFeaturesAutomarker", "automarkers");
            AddEntry("Status/NumFeaturesDrawing", "draws and overlays");
            AddEntry("Status/NumFeaturesSound", "sound features");
            AddEntry("Status/NumFeaturesHack", "hacks and game-altering features");
            AddEntry("Status/NumFeaturesAutomation", "automation features");
            AddEntry("SoundEffect/Se1", "Sound Effect 1");
            AddEntry("SoundEffect/Se2", "Sound Effect 2");
            AddEntry("SoundEffect/Se3", "Sound Effect 3");
            AddEntry("SoundEffect/Se4", "Sound Effect 4");
            AddEntry("SoundEffect/Se5", "Sound Effect 5");
            AddEntry("SoundEffect/Se6", "Sound Effect 6");
            AddEntry("SoundEffect/Se7", "Sound Effect 7");
            AddEntry("SoundEffect/Se8", "Sound Effect 8");
            AddEntry("SoundEffect/Se9", "Sound Effect 9");
            AddEntry("SoundEffect/Se10", "Sound Effect 10");
            AddEntry("SoundEffect/Se11", "Sound Effect 11");
            AddEntry("SoundEffect/Se12", "Sound Effect 12");
            AddEntry("SoundEffect/Se13", "Sound Effect 13");
            AddEntry("SoundEffect/Se14", "Sound Effect 14");
            AddEntry("SoundEffect/Se15", "Sound Effect 15");
            AddEntry("SoundEffect/Se16", "Sound Effect 16");
            AddEntry("ObjectKind/None", "None");
            AddEntry("ObjectKind/Player", "Player");
            AddEntry("ObjectKind/BattleNpc", "Enemy/battle NPC");
            AddEntry("ObjectKind/EventNpc", "Event NPC");
            AddEntry("ObjectKind/Treasure", "Treasure");
            AddEntry("ObjectKind/Aetheryte", "Aetheryte");
            AddEntry("ObjectKind/GatheringPoint", "Gathering point");
            AddEntry("ObjectKind/EventObj", "Event object");
            AddEntry("ObjectKind/MountType", "Mount");
            AddEntry("ObjectKind/Companion", "Minion");
            AddEntry("ObjectKind/Retainer", "Retainer");
            AddEntry("ObjectKind/Area", "Area object");
            AddEntry("ObjectKind/Housing", "Housing object");
            AddEntry("ObjectKind/Cutscene", "Cutscene object");
            AddEntry("ObjectKind/CardStand", "Card stand");
            AddEntry("ObjectKind/Ornament", "Ornament");
            AddEntry("Misc/None", "(none)");
            AddEntry("Misc/HQ", "HQ");
            AddEntry("Misc/SavePreset", "Save preset");
            AddEntry("Misc/SaveNewPresetAs", "Save new preset as..");
            AddEntry("Misc/DeletePreset", "Delete preset");
            AddEntry("Misc/OpenShortcut", "Open Lemegeton");
            AddEntry("Misc/ShowAdvancedOptions", "Show advanced options");
            AddEntry("Misc/HideAdvancedOptions", "Hide advanced options");
            AddEntry("Misc/DragToReorderPrio", "Left-click and drag to reorder priority");
            AddEntry("Misc/RiskyFeature", "This is a hack or a game-altering feature, that may modify game data/state beyond what is normally considered possible. The feature is generally safe to use, but streaming with it on is not recommended. Use at your own discretion!");
            AddEntry("Misc/ExperimentalFeature", "This is an experimental feature, and while it has been tested, there may still be some bugs that have not been found. If the feature doesn't work for you, or you notice anything strange, please report it on the Discord server so it can be fixed!");
            AddEntry("Trinity/Tank", "Tank");
            AddEntry("Trinity/Healer", "Healer");
            AddEntry("Trinity/DPS", "DPS");
            AddEntry("Role/Tank", "Tank");
            AddEntry("Role/Healer", "Healer");
            AddEntry("Role/Melee", "Melee");
            AddEntry("Role/Ranged", "Ranged");
            AddEntry("Role/Caster", "Caster");
            AddEntry("Job/PLD", "Paladin");
            AddEntry("Job/WAR", "Warrior");
            AddEntry("Job/DRK", "Dark Knight");
            AddEntry("Job/GNB", "Gunbreaker");
            AddEntry("Job/WHM", "White Mage");
            AddEntry("Job/SCH", "Scholar");
            AddEntry("Job/AST", "Astrologian");
            AddEntry("Job/SGE", "Sage");
            AddEntry("Job/MNK", "Monk");
            AddEntry("Job/DRG", "Dragoon");
            AddEntry("Job/NIN", "Ninja");
            AddEntry("Job/SAM", "Samurai");
            AddEntry("Job/RPR", "Reaper");
            AddEntry("Job/BRD", "Bard");
            AddEntry("Job/MCH", "Machinist");
            AddEntry("Job/DNC", "Dancer");
            AddEntry("Job/BLM", "Black Mage");
            AddEntry("Job/SMN", "Summoner");
            AddEntry("Job/RDM", "Red Mage");
            AddEntry("Signs/None", "None");
            AddEntry("Signs/Attack1", "Attack 1");
            AddEntry("Signs/Attack2", "Attack 2");
            AddEntry("Signs/Attack3", "Attack 3");
            AddEntry("Signs/Attack4", "Attack 4");
            AddEntry("Signs/Attack5", "Attack 5");
            AddEntry("Signs/Bind1", "Bind 1");
            AddEntry("Signs/Bind2", "Bind 2");
            AddEntry("Signs/Bind3", "Bind 3");
            AddEntry("Signs/Ignore1", "Ignore 1");
            AddEntry("Signs/Ignore2", "Ignore 2");
            AddEntry("Signs/Circle", "Circle");
            AddEntry("Signs/Plus", "Plus");
            AddEntry("Signs/Square", "Square");
            AddEntry("Signs/Triangle", "Triangle");
            AddEntry("Signs/AttackNext", "Next Attack");
            AddEntry("Signs/BindNext", "Next Bind");
            AddEntry("Signs/IgnoreNext", "Next Ignore");
            AddEntry("Automarker/ManualPreset", "Manual");
            AddEntry("Automarker/PrioType/PartyMember", "Player");
            AddEntry("Automarker/PrioType/PartyListOrder", "Party list order");
            AddEntry("Automarker/PrioType/PartyListCustom", "Custom party list priority");
            AddEntry("Automarker/PrioType/Alphabetic", "Alphabetic");
            AddEntry("Automarker/PrioType/Trinity", "By trinity");
            AddEntry("Automarker/PrioType/Role", "By role");
            AddEntry("Automarker/PrioType/Job", "By job");
            AddEntry("Automarker/PrioType/CongaX", "West-east conga line");
            AddEntry("Automarker/PrioType/CongaY", "North-south conga line");
            AddEntry("Automarker/PrioType/Player", "By player");
            AddEntry("Automarker/PrioType/Player/FillFromPartyList", "Fill from current party");
            AddEntry("Automarker/PrioType/Player/FillFromCongaLine", "Fill from west-east conga line");
            AddEntry("Automarker/PrioType/PlCustom/FillFromCongaLine", "Fill from west-east conga line");
            AddEntry("Automarker/PrioType/PartyListOrder/Reversed", "Sort bottom-to-top instead of top-to-bottom");
            AddEntry("Automarker/PrioType/Alphabetic/Reversed", "Sort in descending order instead of ascending");
            AddEntry("Automarker/PrioType/CongaX/Reversed", "Do a east-west conga line instead of west-east");
            AddEntry("Automarker/PrioType/CongaY/Reversed", "Do a south-north conga line instead of north-south");
            AddEntry("Automarker/TimingType/InheritDesc", "Inherit timing settings from default settings");
            AddEntry("MainMenu/Settings/QuickToggles", "Quick toggles");
            AddEntry("MainMenu/Settings/QuickToggles/Info", "These settings allow you to quickly disable features if necessary. All possible sources will be affected, regardless of content and type.");
            AddEntry("MainMenu/Settings/QuickToggles/Automarkers", "Allow automarkers");
            AddEntry("MainMenu/Settings/QuickToggles/Overlays", "Allow overlays and drawing");
            AddEntry("MainMenu/Settings/QuickToggles/Sound", "Allow sounds");
            AddEntry("MainMenu/Settings/QuickToggles/Hacks", "Allow hacks and game-altering features");
            AddEntry("MainMenu/Settings/QuickToggles/Automation", "Allow automation features");
            AddEntry("MainMenu/Status", "Status");
            AddEntry("MainMenu/Content", "Content");
            AddEntry("MainMenu/Other", "Other");
            AddEntry("MainMenu/Settings", "Settings");
            AddEntry("MainMenu/Settings/UiSettings", "User interface settings");
            AddEntry("MainMenu/Settings/Language", "Language");
            AddEntry("MainMenu/Settings/AdvancedOptions", "Always show advanced options on content items");
            AddEntry("MainMenu/Settings/DebugSettings", "Debug settings");
            AddEntry("MainMenu/Settings/DebugSettings/QueueFramework", "Queue tasks on framework thread");
            AddEntry("MainMenu/Settings/DebugSettings/DelegateDebug", "Event firing test range");
            AddEntry("MainMenu/Settings/DebugSettings/Config", "Configuration debug");
            AddEntry("MainMenu/Settings/DebugSettings/LoadConfig", "Reload configuration from disk");
            AddEntry("MainMenu/Settings/DebugSettings/SaveConfig", "Save configuration to disk");
            AddEntry("MainMenu/Settings/DebugSettings/BackupConfig", "Create configuration backup");
            AddEntry("MainMenu/Settings/DebugSettings/ExportConfig", "Generate configuration snapshot");
            AddEntry("MainMenu/Settings/DebugSettings/ImportConfig", "Import configuration snapshot");
            AddEntry("MainMenu/Settings/DebugSettings/CopyToClipboard", "Copy snapshot to clipboard");
            AddEntry("MainMenu/Settings/DebugSettings/PasteFromClipboard", "Paste snapshot from clipboard");
            AddEntry("MainMenu/Settings/DebugOnlyLogAutomarkers", "Only log automarkers instead of actually applying them");
            AddEntry("MainMenu/Settings/ShowShortcut", "Show shortcut when window is closed");
            AddEntry("MainMenu/Settings/NagAboutStreaming", "Nag about streaming if features with potential visible impact have been enabled");
            AddEntry("MainMenu/Settings/AutomarkerSettings", "Automarker settings");
            AddEntry("MainMenu/Settings/AutomarkersSoftDesc", "Soft automarkers are client-side markers that will not be sent to the server, and therefore will also not be visible to other players. The markers themselves are visually the same signs as the ingame signs, although displayed slightly differently.");
            AddEntry("MainMenu/Settings/AutomarkersSoft", "Use soft automarkers");
            AddEntry("MainMenu/Settings/AutomarkersSoftPermsMissing", "Soft automarkers need permission to draw as they are drawn on your screen as separate markers. Please allow drawing by enabling '{0}' from under '{1}' in '{2}'.");
            AddEntry("MainMenu/Settings/RemoveAutomarkers", "Force remove all marks");
            AddEntry("MainMenu/Settings/RemoveMarkersAfterCombatEnd", "Remove all marks after combat ends");
            AddEntry("MainMenu/Settings/RemoveMarkersAfterWipe", "Remove all marks after a wipe");
            AddEntry("MainMenu/Settings/AutomarkersCommands", "Use older command injection even when marking function is available");
            AddEntry("MainMenu/Settings/AutomarkersInitialApplicationDelay", "Delay to initial marker application (random within specified range)");
            AddEntry("MainMenu/Settings/AutomarkersSubsequentApplicationDelay", "Delay between subsequent marker applications (random within specified range)");
            AddEntry("MainMenu/Settings/AutomarkerSeconds", "second(s)");
            AddEntry("MainMenu/Settings/SoftmarkerSettings", "Softmarker customization");
            AddEntry("MainMenu/Settings/SoftmarkerPreviewActive", "While this menu is open, a softmarker preview that rotates through some of the possible markers will be displayed on your character. No other softmarkers will be displayed at this time.");
            AddEntry("MainMenu/Settings/SoftmarkerTint", "Marker tint");
            AddEntry("MainMenu/Settings/SoftmarkerBounce", "Bouncing markers");
            AddEntry("MainMenu/Settings/SoftmarkerBlink", "Blinking markers");
            AddEntry("MainMenu/Settings/SoftmarkerScaling", "Marker scaling factor");
            AddEntry("MainMenu/Settings/SoftmarkerOffsetWorld", "Marker offset in world coordinates");
            AddEntry("MainMenu/Settings/SoftmarkerOffsetScreen", "Marker offset in screen coordinates");
            AddEntry("MainMenu/Settings/OpcodeSettings", "Opcode settings");
            AddEntry("MainMenu/Settings/LogUnhandledOpcodes", "Log unhandled opcodes");
            AddEntry("MainMenu/Settings/OpcodeUrl", "Opcode URL");
            AddEntry("MainMenu/Settings/OpcodeRegion", "Opcode region");
            AddEntry("MainMenu/Settings/OpcodeReload", "Reload opcodes");
            AddEntry("MainMenu/About", "About");
            AddEntry("Content/missing", "Sorry, this type of content is not available at this time!");
            AddEntry("Content/Debug", "Debugging and development tools");
            AddEntry("Content/Debug/Enabled", "Enabled");
            AddEntry("Content/Debug/Debugger", "Debugger");
            AddEntry("Content/Debug/Debugger/Enabled", "Enabled");
            AddEntry("Content/Miscellaneous/Hack", "Hacks");
            AddEntry("Content/Miscellaneous/Hack/Enabled", "Enabled");
            AddEntry("Content/Miscellaneous/Hack/Teleporter", "Teleporter");
            AddEntry("Content/Miscellaneous/Hack/Teleporter/Enabled", "Enabled");
            AddEntry("Content/Miscellaneous/Hack/Teleporter/X", "X");
            AddEntry("Content/Miscellaneous/Hack/Teleporter/Y", "Y");
            AddEntry("Content/Miscellaneous/Hack/Teleporter/Z", "Z");
            AddEntry("Content/Miscellaneous/Hack/Teleporter/GetCurrent", "Get current position");
            AddEntry("Content/Miscellaneous/Hack/Teleporter/Teleport", "Teleport");
            AddEntry("Content/Miscellaneous/Hack/Teleporter/PlayersNearby", "Players nearby");
            AddEntry("Content/Miscellaneous/Hack/Teleporter/AllowRiskyTeleport", "Allow teleporting even with players nearby");
            AddEntry("Content/Miscellaneous/Automation", "Automation");
            AddEntry("Content/Miscellaneous/Automation/Enabled", "Enabled");
            AddEntry("Content/Miscellaneous/Automation/FishForever", "Fish on repeat");
            AddEntry("Content/Miscellaneous/Automation/FishForever/Enabled", "Enabled");
            AddEntry("Content/Miscellaneous/Automation/FishForever/IgnoreLight", "Ignore light tugs");
            AddEntry("Content/Miscellaneous/Automation/FishForever/IgnoreMedium", "Ignore medium tugs");
            AddEntry("Content/Miscellaneous/Automation/FishForever/IgnoreHeavy", "Ignore heavy tugs");
            AddEntry("Content/Miscellaneous/Automation/FishForever/UsePatience2", "Use Patience II");
            AddEntry("Content/Miscellaneous/Automation/FishForever/UseMooch", "Use Mooch");
            AddEntry("Content/Miscellaneous/Automation/FishForever/UseMooch2", "Use Mooch II");
            AddEntry("Content/Miscellaneous/Automation/FishForever/UseThaliakFavor", "Use Thaliak's Favor");
            AddEntry("Content/Miscellaneous/Automation/FishForever/ReleaseEverything", "Release everything");
            AddEntry("Content/Miscellaneous/Automation/FishForever/Food", "Use food");
            AddEntry("Content/Miscellaneous/VisualEnhancement", "Visual enhancements");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Enabled", "Enabled");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox", "Hitbox");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox/Enabled", "Enabled");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox/HitboxColor", "Hitbox highlight color");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox/CastColor", "Cast indicator color");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox/DrawOnEnemies", "Draw highlight on enemies");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox/DrawOnPlayers", "Draw highlight on players");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox/OnlyCurrentTarget", "Draw only on current target");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox/ShowCasts", "Show casting indicator on hitbox");
            AddEntry("Content/Debug/Debugger/ObjectMonitor", "Object monitor");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/Enabled", "Enabled");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/TextColor", "Tag text color");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/ShowTextBg", "Show text background");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/BgColor", "Tag background color");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/TagPlayers", "Tag players");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/TagEventObjs", "Tag event objects");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/TagBattleNpcs", "Tag battle NPCs");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/TagOthers", "Tag all other unspecified types");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/OnlyVisible", "Show only visible objects");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/OnlyTargettable", "Show only targettable objects");
            AddEntry("Content/Debug/Debugger/EventLogger", "Event logger");
            AddEntry("Content/Debug/Debugger/EventLogger/Enabled", "Enabled");
            AddEntry("Content/Debug/Debugger/EventLogger/LogInCombat", "Log when in combat");
            AddEntry("Content/Debug/Debugger/EventLogger/LogOutsideCombat", "Log outside of combat");
            AddEntry("Content/Debug/Debugger/EventLogger/LogToDalamudLog", "Output to Dalamud log");
            AddEntry("Content/Debug/Debugger/EventLogger/LogToFile", "Output to file");
            AddEntry("Content/Debug/Debugger/EventLogger/LogFilename", "Log filename");
            AddEntry("Content/Debug/Debugger/EventLogger/CurrentLogFilename", "Current log file");
            AddEntry("Content/Debug/Debugger/StressTest", "Stress test");
            AddEntry("Content/Debug/Debugger/StressTest/Enabled", "Enabled");
            AddEntry("Content/Debug/Debugger/StressTest/TestAutomarkers", "Test automarkers");
            AddEntry("Content/Debug/Debugger/StressTest/TestAutomarkerRapidfire", "Test automarker rapid set/clear");
            AddEntry("Content/Debug/Debugger/StressTest/AmFails", "Automarker errors");
            AddEntry("Content/Miscellaneous", "Miscellaneous");
            AddEntry("Content/Miscellaneous/Enabled", "Enabled");
            AddEntry("Content/Miscellaneous/Radar", "Radar");
            AddEntry("Content/Miscellaneous/Radar/Enabled", "Enabled");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies", "Draw enemies");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/Enabled", "Enabled");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/ObjectColor", "Enemy highlight color");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/DrawLine", "Draw line to nearby enemies");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/ShowNames", "Show name tags");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/IncludeDistance", "Include distance on the name tag");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/TextColor", "Name tag text color");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/ShowNameBg", "Show name tag background");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/BgColor", "Name tag background color");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers", "Draw players");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/Enabled", "Enabled");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/ObjectColor", "Player highlight color");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/ShowNames", "Show name tags");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/IncludeDistance", "Include distance on the name tag");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/TextColor", "Name tag text color");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/ShowNameBg", "Show name tag background");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/BgColor", "Name tag background color");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/ShowJobIcon", "Show job icon");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/ShowHpBar", "Show HP bar");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint", "Draw gathering points");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/Enabled", "Enabled");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/ObjectColor", "Highlight color");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/OnlyOnGatherers", "Show only when on a gathering job");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/ShowNames", "Show name tags");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/IncludeDistance", "Include distance on the name tag");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/TextColor", "Name tag text color");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/ShowNameBg", "Show name tag background");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/BgColor", "Name tag background color");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/ShowHidden", "Show hidden nodes");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/HiddenColor", "Hidden node highlight color");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/ShowNameOnHidden", "Show name tag on hidden nodes");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/ShowNameBgOnHidden", "Show name tag background on hidden nodes");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder", "Finder");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/Enabled", "Enabled");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/LookFor", "Objects to look for");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/LookFor/AddNew", "Add to list");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/LookFor/Remove", "Remove selected");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/LookFor/Clear", "Clear all");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/IncludeRankS", "Include all S-rank hunts");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/IncludeRankA", "Include all A-rank hunts");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/IncludeRankB", "Include all B-rank hunts");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/IncludeIslandRare", "Include Island Sanctuary rare animals");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/SoundAlert", "Play sound effect when something has been found");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/ObjectColor", "Object highlight color");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/SRankColor", "S-rank highlight color");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/ARankColor", "A-rank highlight color");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/BRankColor", "B-rank highlight color");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/RareAnimalColor", "Rare animal highlight color");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/ShowNames", "Show name tags");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/IncludeDistance", "Include distance on the name tag");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/TextColor", "Name tag text color");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/ShowNameBg", "Show name tag background");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/BgColor", "Name tag background color");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/LastSeen", "last seen");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/Never", "never");
            AddEntry("Content/DeepDungeon", "Deep Dungeons");
            AddEntry("Content/DeepDungeon/Enabled", "Enabled");
            AddEntry("Content/DeepDungeon/AccursedHoard", "Accursed Hoard");
            AddEntry("Content/DeepDungeon/EurekaOrthos", "Eureka Orthos");
            AddEntry("Content/DeepDungeon/EurekaOrthos/Enabled", "Enabled");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies", "Draw enemies");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/Enabled", "Enabled");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/ObjectColor", "Enemy highlight color");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/DrawLine", "Draw line to nearby enemies");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/ShowNames", "Show name tags");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/IncludeDistance", "Include distance on the name tag");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/TextColor", "Name tag text color");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/ShowNameBg", "Show name tag background");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/BgColor", "Name tag background color");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons", "Draw pylons");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons/Enabled", "Enabled");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons/ObjectColor", "Pylon highlight color");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons/ShowNames", "Show name tags");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons/IncludeDistance", "Include distance on the name tag");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons/TextColor", "Name tag text color");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons/ShowNameBg", "Show name tag background");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons/BgColor", "Name tag background color");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests", "Draw chests and Accursed Hoard");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/Enabled", "Enabled");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/GoldColor", "Gold chest color");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/SilverColor", "Silver chest color");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/BronzeColor", "Bronze chest color");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/BandedColor", "Banded chest color");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/HoardColor", "Accursed Hoard color");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/ShowNames", "Show name tags");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/IncludeDistance", "Include distance on the name tag");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/TextColor", "Name tag text color");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/ShowNameBg", "Show name tag background");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/BgColor", "Name tag background color");
            AddEntry("Content/DeepDungeon/HeavenOnHigh", "Heaven-on-High");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/Enabled", "Enabled");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies", "Draw enemies");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/Enabled", "Enabled");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/ObjectColor", "Enemy highlight color");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/DrawLine", "Draw line to nearby enemies");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/ShowNames", "Show name tags");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/IncludeDistance", "Include distance on the name tag");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/TextColor", "Name tag text color");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/ShowNameBg", "Show name tag background");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/BgColor", "Name tag background color");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons", "Draw beacons");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons/Enabled", "Enabled");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons/ObjectColor", "Beacon highlight color");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons/ShowNames", "Show name tags");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons/IncludeDistance", "Include distance on the name tag");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons/TextColor", "Name tag text color");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons/ShowNameBg", "Show name tag background");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons/BgColor", "Name tag background color");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests", "Draw chests and Accursed Hoard");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/Enabled", "Enabled");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/GoldColor", "Gold chest color");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/SilverColor", "Silver chest color");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/BronzeColor", "Bronze chest color");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/BandedColor", "Banded chest color");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/HoardColor", "Accursed Hoard color");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/ShowNames", "Show name tags");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/IncludeDistance", "Include distance on the name tag");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/TextColor", "Name tag text color");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/ShowNameBg", "Show name tag background");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/BgColor", "Name tag background color");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead", "The Palace of the Dead");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/Enabled", "Enabled");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies", "Draw enemies");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/Enabled", "Enabled");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/ObjectColor", "Enemy highlight color");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/DrawLine", "Draw line to nearby enemies");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/ShowNames", "Show name tags");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/IncludeDistance", "Include distance on the name tag");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/TextColor", "Name tag text color");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/ShowNameBg", "Show name tag background");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/BgColor", "Name tag background color");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons", "Draw cairns");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons/Enabled", "Enabled");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons/ObjectColor", "Cairn highlight color");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons/ShowNames", "Show name tags");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons/IncludeDistance", "Include distance on the name tag");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons/TextColor", "Name tag text color");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons/ShowNameBg", "Show name tag background");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons/BgColor", "Name tag background color");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests", "Draw chests and Accursed Hoard");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/Enabled", "Enabled");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/GoldColor", "Gold chest color");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/SilverColor", "Silver chest color");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/BronzeColor", "Bronze chest color");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/BandedColor", "Banded chest color");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/HoardColor", "Accursed Hoard color");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/ShowNames", "Show name tags");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/IncludeDistance", "Include distance on the name tag");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/TextColor", "Name tag text color");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/ShowNameBg", "Show name tag background");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/BgColor", "Name tag background color");
            AddEntry("Content/Raid", "Raids");
            AddEntry("Content/Raid/Enabled", "Enabled");
            AddEntry("Content/EndwalkerRaids", "Endwalker (6.x)");
            AddEntry("Content/EndwalkerRaids/Enabled", "Enabled");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos", "Abyssos (6.2)");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/Enabled", "Enabled");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM", "(P7s) Inviolate Bonds/Purgation automarker");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Enabled", "Enabled");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/SelfMarkOnly", "Self-marking only");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/AsSoftmarker", "Show as client-side soft markers");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs", "Marker configuration");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/ShareTarget", "Share target");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/Share1", "Share 1");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/Share2", "Share 2");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/Share3", "Share 3");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/Spread1", "Spread 1");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/Spread2", "Spread 2");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/Spread3", "Spread 3");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/Spread4", "Spread 4");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Prio", "Priority configuration");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Test", "Test assignment (respecting priority)");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios", "Anabaseios (6.4)");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/Enabled", "Enabled");
            AddEntry("Content/Trial", "Trials");
            AddEntry("Content/Trial/Enabled", "Enabled");
            AddEntry("Content/Ultimate", "Ultimate Raids");
            AddEntry("Content/Ultimate/Enabled", "Enabled");
            AddEntry("Content/Ultimate/UltUcob", "The Unending Coil of Bahamut (Ultimate)");
            AddEntry("Content/Ultimate/UltUcob/Enabled", "Enabled");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm", "(P2) Chain Lightning automarker");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm/Enabled", "Enabled");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm/SelfMarkOnly", "Self-marking only");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm/AsSoftmarker", "Show as client-side soft markers");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm/Signs", "Marker configuration");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm/Signs/Lightning1", "Lightning 1");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm/Signs/Lightning2", "Lightning 2");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm/Test", "Test assignment (respecting priority)");
            AddEntry("Content/Ultimate/UltWeaponsRefrain", "The Weapon's Refrain (Ultimate)");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/Enabled", "Enabled");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM", "(P3) Titan gaol automarker");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/Enabled", "Enabled");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/SelfMarkOnly", "Self-marking only");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/AsSoftmarker", "Show as client-side soft markers");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/Signs", "Marker configuration");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/Signs/Gaol1", "Gaol 1");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/Signs/Gaol2", "Gaol 2");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/Signs/Gaol3", "Gaol 3");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/Prio", "Priority configuration");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/Test", "Test assignment (respecting priority)");
            AddEntry("Content/Ultimate/UltDragonsongReprise", "Dragonsong's Reprise (Ultimate)");
            AddEntry("Content/Ultimate/UltDragonsongReprise/Enabled", "Enabled");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM", "(P2) Meteor automarker");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Enabled", "Enabled");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/SelfMarkOnly", "Self-marking only");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/AsSoftmarker", "Show as client-side soft markers");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs", "Marker configuration");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/Meteor1", "Meteor 1");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/Meteor2", "Meteor 2");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/MeteorRole1", "Meteor role 1");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/MeteorRole2", "Meteor role 2");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/NonMeteor1", "Non-Meteor 1");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/NonMeteor2", "Non-Meteor 2");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/NonMeteor3", "Non-Meteor 3");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/NonMeteor4", "Non-Meteor 4");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Prio", "Priority configuration");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Test", "Test assignment (respecting priority)");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm", "(P5) Chain Lightning automarker");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm/Enabled", "Enabled");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm/SelfMarkOnly", "Self-marking only");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm/AsSoftmarker", "Show as client-side soft markers");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm/Signs", "Marker configuration");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm/Signs/Lightning1", "Lightning 1");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm/Signs/Lightning2", "Lightning 2");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm/Test", "Test assignment (respecting priority)");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM", "(P6) Wroth Flames automarker");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Enabled", "Enabled");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/SelfMarkOnly", "Self-marking only");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/AsSoftmarker", "Show as client-side soft markers");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs", "Marker configuration");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Presets/LPDU", "LPDU");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Presets/ElementalDC", "Elemental DC");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Stack1_1", "Stack 1 (Marked)");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Stack1_2", "Stack 1 (Unmarked)");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Stack2_1", "Stack 2 (Marked)");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Stack2_2", "Stack 2 (Unmarked)");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Spread1", "Spread 1");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Spread2", "Spread 2");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Spread3", "Spread 3");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Spread4", "Spread 4");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Prio", "Priority configuration");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Test", "Test assignment (respecting priority)");
            AddEntry("Content/Ultimate/UltOmegaProtocol", "The Omega Protocol (Ultimate)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/Enabled", "Enabled");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ChibiOmega", "(P1/P3) Reduce Omega model size");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ChibiOmega/Enabled", "Enabled");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ChibiOmega/ApplyP1", "Apply to P1 Beetle Omega");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ChibiOmega/SizeP1", "P1 Beetle Omega scale:");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ChibiOmega/ApplyP3", "Apply to P3 Final Omega");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ChibiOmega/SizeP3", "P3 Final Omega scale:");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM", "(P1) Program Loop automarker");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Enabled", "Enabled");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/SelfMarkOnly", "Self-marking only");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/AsSoftmarker", "Show as client-side soft markers");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Signs", "Marker configuration");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Signs/Tower1", "Next tower 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Signs/Tower2", "Next tower 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Signs/Tether1", "Next tether 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Signs/Tether2", "Next tether 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Prio", "Priority configuration");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Test", "Test random assignment");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM", "(P1) Pantokrator automarker");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Enabled", "Enabled");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/SelfMarkOnly", "Self-marking only");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/AsSoftmarker", "Show as client-side soft markers");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Signs", "Marker configuration");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Signs/Beam1", "Next beam 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Signs/Beam2", "Next beam 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Signs/Missile1", "Next missile 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Signs/Missile2", "Next missile 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Prio", "Priority configuration");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Test", "Test random assignment");
            AddEntry("Content/Ultimate/UltOmegaProtocol/GlitchTether", "(P2/P5) Glitch tether distance indicator");
            AddEntry("Content/Ultimate/UltOmegaProtocol/GlitchTether/Enabled", "Enabled");
            AddEntry("Content/Ultimate/UltOmegaProtocol/GlitchTether/TetherOkColor", "Within safe distance color");
            AddEntry("Content/Ultimate/UltOmegaProtocol/GlitchTether/TetherSafeColor", "Safe distance color");
            AddEntry("Content/Ultimate/UltOmegaProtocol/GlitchTether/TetherNokColor", "Wrong distance color");
            AddEntry("Content/Ultimate/UltOmegaProtocol/GlitchTether/Test", "Test random tether to a nearby combatant");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM", "(P2) Party Synergy automarker");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Enabled", "Enabled");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/SelfMarkOnly", "Self-marking only");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/AsSoftmarker", "Show as client-side soft markers");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs", "Marker configuration for Remote Glitch");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/Presets/BPOG - GPOB", "BPOG - GPOB");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/Presets/BPOG - GOPB", "BPOG - GOPB");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/CrossL", "Cross (left)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/CrossR", "Cross (right)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/SquareL", "Square (left)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/SquareR", "Square (right)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/CircleL", "Circle (left)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/CircleR", "Circle (right)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/TriangleL", "Triangle (left)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/TriangleR", "Triangle (right)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2", "Marker configuration for Mid Glitch");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/Presets/BPOG - BPOG", "BPOG - BPOG");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/CrossL", "Cross (left)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/CrossR", "Cross (right)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/SquareL", "Square (left)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/SquareR", "Square (right)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/CircleL", "Circle (left)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/CircleR", "Circle (right)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/TriangleL", "Triangle (left)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/TriangleR", "Triangle (right)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Prio", "Priority configuration");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Test", "Test random assignment");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM", "(P3) Transition automarker");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Enabled", "Enabled");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/SelfMarkOnly", "Self-marking only");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/AsSoftmarker", "Show as client-side soft markers");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs", "Marker configuration");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Stack1_1", "Stack 1 (marked)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Stack1_2", "Stack 1 (unmarked)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Stack2_1", "Stack 2 (marked)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Stack2_2", "Stack 2 (unmarked)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Spread1", "Spread 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Spread2", "Spread 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Spread3", "Spread 3");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Spread4", "Spread 4");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Prio", "Priority configuration");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Test", "Test random assignment");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM", "(P3) Monitor automarker");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Enabled", "Enabled");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/SelfMarkOnly", "Self-marking only");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/AsSoftmarker", "Show as client-side soft markers");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs", "Marker configuration");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/Monitor1", "Monitor 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/Monitor2", "Monitor 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/Monitor3", "Monitor 3");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/None1", "Unmarked 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/None2", "Unmarked 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/None3", "Unmarked 3");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/None4", "Unmarked 4");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/None5", "Unmarked 5");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Prio", "Priority configuration");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Test", "Test random assignment");
            AddEntry("Content/Ultimate/UltOmegaProtocol/HelloWorldDrawBossMonitor", "(P3) Highlight boss monitor");
            AddEntry("Content/Ultimate/UltOmegaProtocol/HelloWorldDrawBossMonitor/Enabled", "Enabled");
            AddEntry("Content/Ultimate/UltOmegaProtocol/HelloWorldDrawBossMonitor/HighlightColor", "Highlight color");
            AddEntry("Content/Ultimate/UltOmegaProtocol/HelloWorldDrawBossMonitor/Test", "Test overlay");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM", "(P5) Run: ****mi* (Delta Version) automarker");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/Enabled", "Enabled");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/SelfMarkOnly", "Self-marking only");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/AsSoftmarker", "Show as client-side soft markers");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/Signs", "Marker configuration");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/Signs/Presets/LPDU", "LPDU / Sausage");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/Signs/Presets/ElementalDC", "Elemental DC");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/Signs/DistantWorld", "Distant World");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/Signs/NearWorld", "Near World");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/Test", "Test random assignment");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaDrawBossMonitor", "(P5) Run: ****mi* (Delta Version) highlight boss monitor");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaDrawBossMonitor/Enabled", "Enabled");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaDrawBossMonitor/HighlightColor", "Highlight color");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaDrawBossMonitor/Test", "Test overlay");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM", "(P5) Run: ****mi* (Sigma Version) automarker");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Enabled", "Enabled");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/SelfMarkOnly", "Self-marking only");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/AsSoftmarker", "Show as client-side soft markers");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs", "Marker configuration");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/Presets/LPDU", "LPDU / Sausage");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/Presets/ElementalDC", "Elemental DC");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/Arm1", "Arm Bait 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/Arm2", "Arm Bait 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/DistantWorld", "Distant World");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/NearWorld", "Near World");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/DistantFarBait", "Distant Far Bait");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/DistantCloseBait", "Distant Close Bait");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/NearBait1", "Near World Bait 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/NearBait2", "Near World Bait 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Prio", "Priority configuration");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Test", "Test random assignment");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM", "(P5) Run: ****mi* (Omega Version) automarker");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Enabled", "Enabled");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/SelfMarkOnly", "Self-marking only");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/AsSoftmarker", "Show as client-side soft markers");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs", "Marker configuration");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/Presets/LPDU", "LPDU / Sausage");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/Monitor1", "Monitor / Tether 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/Monitor2", "Monitor / Tether 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/DistantWorld", "Distant World");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/NearWorld", "Near World");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/Bait1", "Bait 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/Bait2", "Bait 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/Bait3", "Bait 3");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/Bait4", "Bait 4");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Prio", "Priority configuration");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Test", "Test random assignment");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaDrawBossMonitor", "(P5) Run: ****mi* (Omega Version) highlight boss monitor");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaDrawBossMonitor/Enabled", "Enabled");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaDrawBossMonitor/HighlightColor", "Highlight color");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaDrawBossMonitor/Test", "Test overlay");
            #endregion
        }

    }

}
